---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: source-controller
{{ include "labels.common" . | indent 4 }}
  name: source-controller
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: source-controller
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
      app.kubernetes.io/name: {{ include "name" . }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app: source-controller
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/name: {{ include "name" . }}
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        giantswarm.io/service-type: managed
        helm.sh/chart: {{ include "chart" . }}
    spec:
      containers:
        - args:
            - --events-addr=http://notification-controller.$(RUNTIME_NAMESPACE).svc.cluster.local./
            - --watch-all-namespaces
            - --log-level=info
            - --log-encoding=json
            - --enable-leader-election
            - --storage-path=/data
            - --storage-adv-addr=source-controller.$(RUNTIME_NAMESPACE).svc.cluster.local.
          env:
            - name: RUNTIME_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: TUF_ROOT
              value: /tmp/.sigstore
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  containerName: manager
                  resource: limits.cpu
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: manager
                  resource: limits.memory
          image: '{{ .Values.images.registry }}/{{ .Values.images.sourceController.image }}:v1.3.0'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
          name: manager
          ports:
            - containerPort: 9090
              name: http
              protocol: TCP
            - containerPort: 8080
              name: http-prom
              protocol: TCP
            - containerPort: 9440
              name: healthz
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
{{ include "resources.sourceController" . | indent 12 }}
          securityContext:
            {{- with .Values.containerSecurityContext }}
            {{- . | toYaml | nindent 12 }}
            {{- end }}
            readOnlyRootFilesystem: true
            runAsUser: 100
            {{- if ge (int .Capabilities.KubeVersion.Minor) 19 }}
            {{- with .Values.seccompProfile }}
            seccompProfile:
              {{- . | toYaml | nindent 14 }}
            {{- end }}
            {{- end }}
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /tmp
              name: tmp
      priorityClassName: {{ include "priorityClass.name" . }}
      securityContext:
        fsGroup: 1337
        {{- if ge (int .Capabilities.KubeVersion.Minor) 19 }}
        {{- with .Values.podSeccompProfile }}
        seccompProfile:
          {{- . | toYaml | nindent 10 }}
        {{- end }}
        {{- end }}
      serviceAccountName: source-controller
      terminationGracePeriodSeconds: 10
      volumes:
        - emptyDir: {}
          name: data
        - emptyDir: {}
          name: tmp
